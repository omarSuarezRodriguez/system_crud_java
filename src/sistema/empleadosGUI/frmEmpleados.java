/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistema.empleadosGUI;

import java.sql.ResultSet;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import sistema.empleadosBL.empleadosBL;
import sistema.empleadosDAL.conexion;



/**
 *
 * @author Omar
 */
public class frmEmpleados extends javax.swing.JFrame {
    
    DefaultTableModel modelo;
    
    

    /**
     * Creates new form frmEmpleados
     */
    public frmEmpleados() {
        initComponents();
        
        String[] titulos = {"ID", "Nombre", "Correo"};
        modelo = new DefaultTableModel(null, titulos);
        tblEmpleados.setModel(modelo);
        
        mostrarDatos();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmpleados = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        txtID = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtCorreo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnPruebas = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblEmpleados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmpleadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblEmpleados);

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnBorrar.setText("Borrar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");

        jLabel1.setText("ID:");

        jLabel2.setText("Nombre:");

        jLabel3.setText("Correo:");

        btnPruebas.setText("Pruebas");
        btnPruebas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPruebasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCorreo)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAgregar)
                                .addGap(34, 34, 34)
                                .addComponent(btnEditar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnBorrar)
                                .addGap(27, 27, 27)
                                .addComponent(btnCancelar))
                            .addComponent(txtNombre)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPruebas)
                        .addGap(77, 77, 77))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPruebas))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnEditar)
                    .addComponent(btnBorrar)
                    .addComponent(btnCancelar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        
        conexion objConexion = new conexion();
        
        // Método que obtiene los datos de la GUI y lo guarda en objeto oEmpleados
        empleadosBL oEmpleados = recuperarDatosGUI();
        
        // Insertar dato en la tabla de la bd con la sentencia SQL y ya formateada
        // la información
        String strSentenciaInsert = String.format("INSERT INTO Empleados (ID, Nombre, Correo) "
                + "VALUES (null, '%s', '%s')", oEmpleados.getNombre(), oEmpleados.getCorreo());
        
        
        
        
        objConexion.ejecutarSentenciaSQL(strSentenciaInsert);
        
        try {
            
            ResultSet resultado = objConexion.consultarRegistros("SELECT * FROM Empleados");
            
            while(resultado.next()) {
                System.out.println(resultado.getString("ID"));
                System.out.println(resultado.getString("Nombre"));
                System.out.println(resultado.getString("Correo"));
            }
            
            
        } catch (Exception e) {
            System.out.println(e);
        }
        
        
        this.mostrarDatos();
        
       
        
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void tblEmpleadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmpleadosMouseClicked
        // TODO add your handling code here:
        
        
        int seleccionar = tblEmpleados.rowAtPoint(evt.getPoint());

        txtID.setText(String.valueOf(tblEmpleados.getValueAt(seleccionar, 0)));
        txtNombre.setText(String.valueOf(tblEmpleados.getValueAt(seleccionar, 1)));
        txtCorreo.setText(String.valueOf(tblEmpleados.getValueAt(seleccionar, 2)));
        
        
        
        
//        
//        JTable receptor = (JTable)evt.getSource();
//            
//            txtID.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(), 0).toString());
//            txtNombre.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(), 1).toString());
//            txtCorreo.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(), 2).toString());
        
      //  if (evt.getClickCount() == 1) {
            
       //     JTable receptor = (JTable)evt.getSource();
            
       //     txtID.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(), 0).toString());
        //    txtNombre.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(), 1).toString());
         //   txtCorreo.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(), 2).toString());
            
      //  }
        
        
    }//GEN-LAST:event_tblEmpleadosMouseClicked

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        // TODO add your handling code here:
        
        conexion objConexion = new conexion();
        
        // Método que obtiene los datos de la GUI y lo guarda en objeto oEmpleados
        empleadosBL oEmpleados = recuperarDatosGUI();
        
        // Insertar dato en la tabla de la bd con la sentencia SQL y ya formateada
        // la información
        String strSentenciaInsert = String.format("DELETE FROM Empleados WHERE ID = %d", oEmpleados.getID());
        
        
       
        objConexion.ejecutarSentenciaSQL(strSentenciaInsert);
        
        this.mostrarDatos();
        
        
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        
        conexion objConexion = new conexion();
        
        // Método que obtiene los datos de la GUI y lo guarda en objeto oEmpleados
        empleadosBL oEmpleados = recuperarDatosGUI();
        
        // Insertar dato en la tabla de la bd con la sentencia SQL y ya formateada
        // la información
        String strSentenciaInsert = String.format("UPDATE Empleados SET Nombre ='%s', "
                + "Correo='%s' WHERE ID =%d" , oEmpleados.getNombre(), oEmpleados.getCorreo(), oEmpleados.getID());
        
        
        
        
        objConexion.ejecutarSentenciaSQL(strSentenciaInsert);
        
        try {
            
            ResultSet resultado = objConexion.consultarRegistros("SELECT * FROM Empleados");
            
            while(resultado.next()) {
                System.out.println(resultado.getString("ID"));
                System.out.println(resultado.getString("Nombre"));
                System.out.println(resultado.getString("Correo"));
            }
            
            
        } catch (Exception e) {
            System.out.println(e);
        }
        
        
        this.mostrarDatos();
        
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnPruebasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPruebasActionPerformed
        // TODO add your handling code here:
        
        
        conexion objConexion = new conexion();
        
        // Sirve para crear tabla
        objConexion.ejecutarSentenciaSQL("CREATE TABLE Polkita (" +
"    post_id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT," +
"    name TEXT NOT NULL," +
"    email TEXT NOT NULL," +
"    website_url TEXT NULL," +
"    comment TEXT NOT NULL )");
        
        
        System.out.println();
        
        
        
    }//GEN-LAST:event_btnPruebasActionPerformed

    
    // Método mostrarDatos
    public void mostrarDatos() {
        
        
        // Limpiar el modelo
        while(modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
        
        
        conexion objConexion = new conexion();
        
        try {
            
            ResultSet resultado = objConexion.consultarRegistros("SELECT * FROM Empleados");
            
            while(resultado.next()) {
                System.out.println(resultado.getString("ID"));
                System.out.println(resultado.getString("Nombre"));
                System.out.println(resultado.getString("Correo"));
                
                Object[] oUsuario =  {resultado.getString("ID"), resultado.getString("Nombre"), resultado.getString("Correo")};
                
                modelo.addRow(oUsuario);
                
                
            }
            
            
        } catch (Exception e) {
            System.out.println(e);
        }
        
        
       
        
    }
    
    
    
    // Método recuperarDatosGUI
    public empleadosBL recuperarDatosGUI() {
        
        empleadosBL oEmpleados = new empleadosBL();
        
        int ID = (txtID.getText().isEmpty()) ? 0 : Integer.parseInt(txtID.getText());
        
        oEmpleados.setID(ID);
        oEmpleados.setNombre(txtNombre.getText());
        oEmpleados.setCorreo(txtCorreo.getText());
        
        return oEmpleados;
        
        
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmEmpleados().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnPruebas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblEmpleados;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
